name: Lambda Build and Deploy

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      preset:
        description: 'Feature preset to deploy'
        required: true
        default: 'smart_home'
        type: choice
        options:
          - minimal
          - voice_control
          - automation_basic
          - smart_home
          - full

env:
  AWS_REGION: us-east-1
  LAMBDA_FUNCTION_NAME: LambdaExecutionEngine

jobs:
  test:
    name: Test All Presets
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run preset tests
        run: python test_presets.py

      - name: Validate feature coverage
        run: python test_presets.py --coverage

  build:
    name: Build Package
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        preset: [minimal, voice_control, automation_basic, smart_home, full]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Build ${{ matrix.preset }} preset
        env:
          HA_FEATURE_PRESET: ${{ matrix.preset }}
        run: |
          python build_package.py --output lambda_${{ matrix.preset }}.zip

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: lambda-${{ matrix.preset }}
          path: dist/lambda_${{ matrix.preset }}.zip
          retention-days: 30

  deploy:
    name: Deploy to AWS Lambda
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Determine deployment preset
        id: preset
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "preset=${{ github.event.inputs.preset }}" >> $GITHUB_OUTPUT
          else
            echo "preset=smart_home" >> $GITHUB_OUTPUT
          fi

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: lambda-${{ steps.preset.outputs.preset }}
          path: dist/

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to Lambda
        run: |
          aws lambda update-function-code \
            --function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
            --zip-file fileb://dist/lambda_${{ steps.preset.outputs.preset }}.zip

      - name: Wait for update
        run: |
          aws lambda wait function-updated \
            --function-name ${{ env.LAMBDA_FUNCTION_NAME }}

      - name: Update environment variables
        run: |
          aws lambda update-function-configuration \
            --function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
            --environment Variables="{HA_FEATURE_PRESET=${{ steps.preset.outputs.preset }}}"

      - name: Verify deployment
        run: |
          aws lambda invoke \
            --function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
            --payload '{"test": true}' \
            response.json
          cat response.json

  notify:
    name: Notify Deployment Status
    needs: [test, build, deploy]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Deployment Summary
        run: |
          echo "## Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "- Tests: ${{ needs.test.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Build: ${{ needs.build.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Deploy: ${{ needs.deploy.result }}" >> $GITHUB_STEP_SUMMARY
